currentBuild.displayName = "nginx-with-host-info: #" + currentBuild.number

pipeline {
    agent any

    environment {
        DOCKER_PATH = "/Applications/Docker.app/Contents/Resources/bin/docker"
        DOCKER_IMAGE_NAME = 'host-info-img'
        DOCKER_IMAGE_TAG = 'latest'
        HOST_PORT = 8041
        CONTAINER_PORT = 80
        CONTAINER_NAME = 'c3'
    }

    stages {
        stage('Remove Existing Containers') {
            steps {
                script {
                    try {
                        // sh "${DOCKER_PATH} rm -f $(${DOCKER_PATH} ps -aq)"
                        echo "Containers removed successfully"
                    } catch (Exception e) {
                        echo "No running containers to remove"
                    }
                }
            }
        }

        stage('Build and Test') {
            steps {
                script {
                    sh "${DOCKER_PATH} --version"
                    sh "${DOCKER_PATH} build . -t ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
                }
                script {
                    // Run Docker container
                    sh "${DOCKER_PATH} run -itd -p ${HOST_PORT}:${CONTAINER_PORT} -v /etc/localtime:/etc/localtime:ro --name ${CONTAINER_NAME} ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
                }
            }
        }
    }

    post {
        always {
            // Access console log text directly
            script {
               // Get the current build
                def build = currentBuild.rawBuild
                
                // Get the console log
                def consoleLog = build.getLog(1000) // Get the last 1000 lines of the console log
                
                // Print the console log
                echo "Console Log: ${consoleLog}"
                
                // Define a milestone name
                def milestoneName = "BuildCompleted"
                
                // Print a message indicating the milestone has been reached
                echo "Milestone '${milestoneName}' reached!"
                
                // Mark a milestone for the current build
                milestone ordinal: 1 // Change the ordinal to match the desired milestone
            }
        }
    }
}
